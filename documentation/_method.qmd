---
title: "Method: Harmonisation of the food composition tables and databases"
format: html
editor: source
---

```{r, set-up}

```


## Harmonisation of the food composition tables and databases (method)

The harmonisation required two main steps: importing (loading) databases
into R and cleaning and standardising the databases.

![](../presentation/Workflow_v2.png)

![](../presentation/Framework-users_v2.png)

### 1. Importing the data

FCTs (datasets) were found in a variety of formats that needed to be imported
and cleaned into a tabular format. E.g. one row per food item and one
column per variable/ food attribute (for example, energy, proteins).

The steps and scripts for importing each FCT are stored together with
the original FCT (raw files) in individual folders named with the
BiblioID (See table 2) which is stored in the variable `source_fct` (See
table 3).

### 2. Tidying the data

The steps outlined in the following sections aim to obtain a clean and standardise FCT, which is necessary to merge all data, from various FCTs, into one common FCT data library. The overall steps that were taken are explained
below and annotated scripts for each FCTs can be found in this repository in each corresponding folder, as well as template to serve as a guideline for processing new FCTs. Note that the order of the steps may change from script to script as the shape, format and type of data will influence the processing workflow. Similarly, based on the data structure some steps may not be necessary while other FCTs may require additional processing steps. 

#### 2.1.	Formatting FCT into a tabular format

##### 2.1.1. Creating food groups variable and tidying

Some food composition tables reported food
groups that were placed as the first row of each category, however that it is not a data structure that can be used, as we need one column per variable. Hence, the food group names are extracted from the rows, and are allocated as a new attribute of each food (e.g., fish and fishery products to catfish). The food groups are stored in a new column (`food_group`).

##### 2.1.2. Diving combined variables into two (or more) columns

In some cases, to minimise the number of missing values, two similar food components are combined into one column/ variable. For
example, when Beta-carotene and Beta-Carotene Eq. were reported in the same column
and identified using brackets ([]) around the component values (`CARTEB or [CARTEBEQ]`). However, because we are aiming to have one variable per column, we need to divide the combined variables into two (or more) columns, as such the Beta-carote variable was separated into two independent columns (`CARTEBmg`, `CARTBEQmg`). Note that when we are separating these two food components into the new variable, there are several things that we need to check: we need to check whether they are present in the original FCT, otherwise we may be overwriting values. 

1) The variable is not present, then create a new column.
2) The variable is present: only overwrite if the value is missing in the original column.
3) Do not remove the brackets from the original variable. As we will add information (metadata) about the quality of the value after removing the brackets. 


**c. Removing summary statistics from the table.** Because summary
statistics will not be used, data were removed. For future development,
a way to account for variability (e.g., using the summary stats) could
be studied (How can we keep/use that data?, could we use them to account
for uncertainty in the final results?).

#### 2.2. Renaming variable names: Food components definition and re-naming

Each FCT has its own variable names, including for similar food components. Some
FCTs included information related to the FAO/ INFOODS food component
identifiers
[(Tagnames)](https://www.fao.org/infoods/infoods/standards-guidelines/food-component-identifiers-tagnames/en/)

while other did not. In order to merge all data from various FCTs we
need to harmonise the names of all the variables and particularly the
food components of interest. To do so, we evaluated and renamed them
with the most appropriate Tagname. Other variables (e.g., food id, food
name or food description) were renamed to a common variable name, for
instance, `fdc_id`, `food_desc`, following the variable names used in
the previous Fisheries Global NCT (Feb, 2022).

**The identification of food components**

Information on the food components and their description should be
sought in each FCT included. We reviewed the Tagnames used in the
previous version of the  Fisheries Global NCT (Feb, 2022) for generating the same structure and format in our
output table (More information about final format in Section 5.1). Some minor changes in the variable names were introduced
to be compliant with R conventions. E.g., removing spaces in variable
names, changing symbols to characters (e.g., Âµg to mcg), or
standardising the name formatting from using underscores and/or
parenthesis to using only underscores. Also, changing dashes (-) to
underscores (\_). Note that within the Tagnames, the dash is used to
denote that the method for obtaining that (component) value is unknown.
This is important for the quality assessment of the data.

Also, we also assumed that all the variables labelled as "standardised"
were combined or recalculated variables.

Table 2. provides a list of all the variables including food components used
in the previous version of the Fisheries Global NCT (Feb., 2022).


**Table 2.**

```{r, table-2}

library("dplyr")

read.csv(here::here("data", "metadata",           "variable_standards.csv")) %>% knitr::kable()

```



#### 2.3. Standardising of values <br>

To perform mathematical operations, characters needed to be converted
into numeric operator. This includes two steps: 

**a. Removing brackets or other special characters ("[]", "()", "\*")**. As, described above in section 2.1.2.[LINK], special character  were used to denote "low quality values" and/or alternative (determination) methods. For those cases, the numeric
value was extracted and the special character removed. In addition, the variable `comments` was created in a way of keeping that information as metadata for other users. In the future, that variable could be converted into a proxy for data quality, such as, generating a score with the number of "low quality" values per food item and/or food component. 


**b. Changing characters into numeric**: For instance, values that were reported to be trace ("tr") or below the detection limit ("<LOD") were converted to zero (0). This was in agreement with other FC compilers and nutrition expert from the FAO  (A.M., B.H, D.R., F.G.). These changes are also recorded in the `comments` variable as part of the metadata available. 

**c. Extracting information**: Some food component information, for instance alcohol content, could be reported within the food description instead of in a independent variable. Hence that information needs to be extracted and a new variable generated.  


#### 2.4. Standardising unit of measurement <br>

To standardise and merge the different FCTs, food components need to be
reported in the same units. For example, some nutrients needed to be
convert from mg/100g to g/100g, or from percentage (100%) to a fraction (1). For all the unit conversion we followed the FAO/INFOODS Guidelines for
Converting Units, Denominators and Expression (FAO/INFOODS, 2012b), and
the suggested standard reporting units.

Eg. Converting alcohol from weight in volume (w/v) to weight in mass (w/m) (Eq.1a) or percentage of alcohol (v/v) into weight mass (Eq.1b) (See INFOODS Guidelines - page 12). 

**Eq.1a** ALC (g/100mL) (w/v) / density (g/mL) = ALC (g/100 EP)

**Eq.1b** ALC (%) (v/v) * 0.789 (g/mL) / density (g/mL) = ALC (g/100 EP) 

Eg. amino acids (AA) reported per g in 100g of PROT to mg in 100g of EP:

**Eq.2.1** AA mg/100g EP = AA mg/g prot \* prot g/100g EP /100

**Eq.2.2** AA mg/100g EP = AA g/ 100g prot \* prot g/100g EP /100 \*
1000/100

**Eq.2.3** AA mg/100g EP = AA g/100g prot \* prot g/100g EP \*10

\\Eq.3: Edible portion = Edible portion (%)/100


**d. Food name/ description standardisation.** The ASFIS list was used
for identification of the fish and fishery products. International Standard Statistical Classification for Aquatic Animals and Plants (ISSCAAP) codes and the
3-alpha codes were assigned to fishery products for identification and
name standardisation. The ISSCAAP codes were also used for assigning the
ICS SUA Fishery category code. The FAO ICP code were extracted from previous work
reported in Fisheries Global NCT, 2022, except for NO21 which was done
semi-manually using R scripts (`NO21/NO21.R`) and it is reported in
(`NO21/NO21_docu.Rmd`).


### 3. Data compilation and harmonisation

Once the FCTs were loaded and harmonised, we combined them into a single
data file (FCT data library), extracted from each FCT the fish and fishery product items and merged the
information already provided by the FAO team regarding each fish item
ISSCAAP, ICS FAOSTAT and alpha-three codes.

All the steps were done and documented in the `merging_all.R` script.

#### 3.4. Food name/ description standardisation and food matching

#### 3.5. Re-calculating variables <br>

According to most food composition compilation, including the FAO/ INFOODS guidelines (Stadlmayr et al., 2012), some food components are re-calculated from other food components even when they are reported in the original FCT. Some of those were: *Sum of proximate*, *Energy* (kcal, kJ), or *carbohydrates available, by difference* among others (See Eq.4-6.3). Furthermore, there are instances when the food components needed for the re-calculation are not present in the original FCTs, hence alternative approaches are developed within this framework to address those cases and to reduce the number of missing values (See section 3.4). In this section, we provide a description and rationale of the scripts and functions that are included in this framework to perform these tasks.


**Eq.4** Sum of Proximate (g/100g) = Sum of water + protein + fat +
available carbohydrates + dietary fibre + alcohol + ash



**Eq.6.1** Energy (kJ/100g EP): sum of protein (g/100g EP)\*17 + available carbohydate (g/100g EP)\*17 + fat(g/100g EP)\*37 +  alcohol (g/100g EP)\*29 + dietary fibre (g/100g EP)\*8

**Eq.6.2** Energy (kcal/100g EP):  sum of protein (g/100g EP)\*4 + available carbohydate (g/100g EP)\*4 + fat(g/100g EP)\*9 +  alcohol (g/100g EP)\*7 + dietary fibre (g/100g EP)\*2


**Eq.8.1** Vitamin A, retinol activity eq. (RAE) (mcg/100g EP) = Retinol (mcg/100g EP) + 1/12\* Beta-Carotene eq. (mcg/100g EP)

**Eq.8.2** Vitamin A, retinol eq. (RE) (mcg/100g EP) = Retinol
(mcg/100g EP) + 1/6\* Beta-Carotene eq. (mcg/100g EP)

\Eq.9.1 Niacin (mcg/100g EP) = 


#### 3.6. Dealing with missing values <br>

##### 3.6.1. Imputing values <br>

Data imputation is used when a nutrient value, or the absence of a nutrient value, is substituted by another value. Here, we included: 


**a) using a value from a different food** (including water adjusted values, and average value from multiple food items). This should be avoided whenever it is possible (i.e., when mean value for each ICS SUA fishery categories were available (n=>1)). In the cases when this condition was not met, a case-by-case approach should be taken and documented both within the documentation and/or user manual and in the final dataset (i.e.,in the column `comments`). 

**b) using a value reported in the original FCT when it should be calculated**. For instance, *beta-carotene eq.* should be calculated using carotenoid values, however in cases when the fractions are not provided the beta-carotene equivalent  value is imputed from the original FCT for the same food item using the function `CARTBEQmcg_std_imputer_with_CARTBEQmcg()`.

**c) assuming zero**: For example, when a value is calculated and yielded a negative result or when a component is commonly non-existent in a food, i.e., alcohol in fish. 

##### 3.6.2. Combining Tagnames <br>

Some food components could be reported using more than one Tagname (as
described in the renaming section and table 3), depending on: the fraction analysed (e.g., Vitamin D3, Vitamin
D2), or the method of analysis (e.g., VITB6A, VITB6C). It is common practice, to avoid missing values, combining values from similar Tagnames such as
Vitamin B6 or total fat into a standardised variable. Within this framework we have developed a function that will generate this standardised variable  (i.e., Variable`_standardised`) 

##### 3.6.3. Back-calculating variables <br>

Back calculation defined as inferring or calculating one nutrient from other(s) is sometimes required when doing data compilation. Here we are introducing some special cases that are not often used, and/or outlined in food composition data compilation guidelines. 

**a. Edible portion**: The most common example is back-calculating edible portion from refuse (Eq.3a-b).

\Eq.3a: Edible portion = 100-Refuse (%)/100

\Eq.3b: Edible portion = 1-Refuse  


**b. Ash**: These values are needed to calculate *Available carbohydrate by difference*, however, in some FCTs (NO21), are not reported. When, available carbohydrates are analysed, we could use an iteration of the \Eq.5 to calculate ash concentration (Eq.5a).

\Eq.5: Carbohydrates available by difference (g/100g) = 100 - (sum
of water + protein + fat + ash + alcohol + dietary fibre)

\Eq.5b: Ash by difference (g/100g) = 100 - (sum of water + protein +
fat + *available carbohydrate* + alcohol + dietary fibre)

**c. Beta-carotene equivalent**: This function only should be used when *Beta-carotene eq.* could not be re-calculated (i.e., carotenoids values were missing) (See section 3.5), or when  beta-carotenoid eq. values are not available from the original FCT (See Section 3.4.1). Then, if retinol and Vitamin A (RAE/RE) were reported, Beta-carotene eq. could back calculated from those values using the Eq. 7b. 

\Eq.7: Beta-Carotene eq. (mcg/100g) = 1\*Beta-carotene
(mcg/100g) + 0.5\* Alpha-carotene (mcg/100g) + 0.5\* Beta-cryptoxanthin
(mcg/100g)

\Eq.7b: Beta-Carotene eq. (mcg/100g) = 12\*(Vitamin A, retinol activity eq. (RAE) (mcg/100g EP) - Retinol (mcg/100g EP))


**d. Retinol**: Similarly, when the retinol values are missing, we suggest the use of the Equation 9a, whereas if beta-carotene eq. are not available, then retinol values could be back-calculated using Equation 9b, which is a combination of the equations to calculate *Vitamin A (RAE)* (Eq.X) and *Vitamin A (RAE)* (Eq.X). 

For instance, when a food entry was missing the retinol
value (`RETOLmcg`) but it reported Vitamin A (RAE) (`VITA_RAEmcg`)
and Beta-Carotene eq. (`CARBEQmcg`). The retinol was calculated
using the [Eq.8.3a](\LINK). Additionally, when Vitamin A (RAE)
(`VITA_RAEmcg`) and Vitamin A (RAE) (`VITAmcg`) was provided,
retinol as calculated by the [Eq.8.3b](LINK). This function
added a comment (see `comment`) with information about the
components that were used to impute the final `RETOLmcg` value. If
no comment was provided, then it was provided by the original food
composition source. More information about the development of the
function is provided in Issue #46.

\Eq.9a. Retinol (mcg/100g EP) = Vitamin A, retinol activity eq. (RAE) (mcg/100g) - 1/12\* Beta-Carotene eq. (mcg/100g EP)

\Eq.9b Retinol (mcg/100g EP) = Vitamin A, retinol eq. (RE) (mcg/100g EP) + 2\*Vitamin A, retinol activity eq. (RAE) (mcg/100g EP)




##### Generating functions for data transformation <br>





**Calculating variables**: For instance, Vitamin A, retinol
eq.(mcg/100g) and Beta-Carotene eq.(mcg/100g) were calculated using a
function for the weighted sum of the listed variables. Including one of the special cases, for instance, `RETOLmcg_Recalculator()` was used to
fill up retinol missing values by back-calculation from Vitamin A (RAE) and Beta-Carotene equivalent.

Here's the list of the standardised variables as reported in the
Fisheries Global NCT, 2022 (Feb., 2022), of which all except vitaimn E (VITEmg), food folate (FOLDFEmcg), niacin eq. (NIAEQmg), niacin from tryptophan (NIATRPmg) and vitamin D (VITDmg) were reported and calculated by functions developed to generate them in
the Fisheries Global NCT, 2022 (Oct., 2022).

-   SOP_own = Sum of Proximate
-   ENERCkJ_standardised
-   ENERCkcal_standardised
-   CHOAVLDFg_standardised
-   FAT_g\_standardised
-   FIBTGg_standardised
-   VITAmcg_standardised
-   VITA_RAEmcg_standardised
-   CARTBEQmcg_standardised
-   VITEmg_standardised
-   THIAmg_standardised
-   FOLDFEmcg_standardised
-   VITB6_mg_standardised
-   NIAEQmg_standadised
-   NIATRIPmg_standardised
-   VITDmg_standardised



### 4. Data visualisation

#### 4.1. Checking Tagnames for completeness <br>

We checked the number of missing values per food component using data
visualisation packages. We used the *naniar package*(@ref-naniar) for visualising missing values by ICS SUA fishery category and by FCT. This allowed the identification of any typos or mistakes when renaming the food components, and also to identify potential food components that could be excluded due to the high number of missing values. Similarly the need for using imputation techniques (see \Section 3.5 & \Section ).

#### 4.2. Checking quality of the values <br>

Two variables were created for data visualisation purposes (fish type and fish preparation) and did not make
it to the final dataset: Fisheries Global NCT (Oct., 2022). We used histograms and boxplot to identify extreme values by plotting
the different components by fish type and fish preparation. 

### 5. Exporting data and metadata

All these steps would allow to replicate the process and to re-generate the table with the same format for future updates. 

#### 5.1. Formatting the data 

First, a summary row was generated for each ICA SUA category which
contained the final mean value for each food component of interest.
Additionally, some food components were recalculated at the summary row.

### Nutrient to be calculated at the summary row:

1)  SOP own
2)  Energy (kcal)
3)  Energy (kJ)
4)  Carbohydrates by difference (g)
5)  Vitamin A RAE (mcg) 
6)  Vitamin A RA (mcg)

Finally, information was added regarding the ICS SUA fishery categories description and edible portion were added from the previous version to the generate the Fisheries Global NCT. 

### 6. Updating Fisheries Global NCT

After all the values were evaluated, particularly the mean values of each food component per ICS SUA category, the data library was formatted to be exported into a human-friendly format (e.g. Excel). Final adjustment were carried to maintain the format of the previous version of the Fisheries Global NCT.

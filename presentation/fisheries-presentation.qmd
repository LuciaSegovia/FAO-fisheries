---
title: "Developing a reproducible framework for generating FCTs & NCTs"
subtitle: "MAPS Briefing <br/> (02/08/2023)"
format:
     revealjs:
        max-scale: 2
        incremental: true
        scrollable: true
        auto-animate-easing: ease-in-out
        auto-animate-unmatched: false
        auto-animate-duration: 0.8
        slide-number: true
        logo: MAPS-logo.png
        css: logo.css
        theme: simple.scss
        embed-resources: true
editor: source
resources:
    - demo.pdf
---

```{r}

library(tidyverse)
library(gt)
library(kableExtra)

fao_fish_fct <- readRDS(file = here::here("presentation",
                      "fao-fish-df.rds"))

```


{{< include _intro.qmd >}}

{{< include _background-objectives.qmd >}}

# The Fisheries Global Nutrient Conversion Table {visibility="hidden"}


## The Fisheries Global Nutrient Conversion Table {auto-animate=true} {visibility="hidden"}

<br/>
The Fisheries Global NCT provided information on:
<br/>

-&nbsp;21 Food components. <br/>

-&nbsp;95 ICS SUA Fisheries (and Aquatic Products) Categories. <br/>

-&nbsp;11 Food composition tables and databases (FCTs).


## The Fisheries Global Nutrient Conversion Table {auto-animate=true} {visibility="hidden"}

<br/>
The Fisheries Global NCT provided information on:
<br/>


-&nbsp;21 Food components + evaluate 10 fish-relevant food components.[^1]<br/>

-&nbsp;95 ICS SUA Fisheries (and Aquatic Products) Categories.<br/>

-&nbsp;11 Food composition tables and databases (FCTs).


[^1]:Docosahexaenoic acid (DHA), Eicosapentaenoic acid (EPA), Iodine (I), Selenium (Se), Copper (Cu), Vitamin B6 (Vit. B6), Vitamin B12 (Vit. B12), Vitamin D (Vit. D), Niacin.

::: notes
We were tasked to evaluate 10 fish-relevant nutrients for inclusion
:::
# Development of the framework for compiling FCTs/NCTs


## Overview of the FCT/NCT framework

![](Workflow_v2.png)

## The user journey

![](Framework-users_v2.png)

## Steps 1 & 2: Data Sources & Importing 

<br/> 

-  Selection criteria for FCTs are based on the relevancy for the study/context
<br/> 
-  Attention to metadata/ documentation, licensing and data format
<br/> 
-  FCTs are imported into R(Studio) & independent scripts are generated for each FCT.

## Steps 2: Data Importing 

<br/> 
FCTs  were found in a variety of formats
<br/> 

``` {.r code-line-numbers="2-3"}

# 1. Importing the data (loading the data)
## What kind of file is? E.g.: xlsx (readxl::read_excel)
#Reads the excel document 
data.df <- readxl::read_excel(here::here('template', # Change to your folder name
                                'template-file-name.xlsx'), # Change to your file name
                              sheet = 5  # Change to excel sheet where the FCT is stored in the excel file
                              ) %>%  
  mutate(source_fct = 'template-xx')  # Creates the source_fct column and fills with "location-year" of FCT 

  
```


## Steps 2: Data Importing 

<br/> 
FCTs  were found in a variety of formats
<br/> 

``` {.r code-line-numbers="4-8"}

# 1. Importing the data (loading the data)
## What kind of file is? E.g.: xlsx (readxl::read_excel)
#Reads the excel document 
data.df <- readxl::read_excel(here::here('template', # Change to your folder name
                                'template-file-name.xlsx'), # Change to your file name
                              sheet = 5  # Change to excel sheet where the FCT is stored in the excel file
                              ) %>%  
  mutate(source_fct = 'template-xx')  # Creates the source_fct column and fills with "location-year" of FCT 

  
```


## Step 3: Data cleaning and standardisation of FCTs 

<br/> 

 1. Formatting FCT into a tabular format

 - Creating food groups variable and tidying
 - Diving combined variables into two (or more) columns
 
 2. Renaming variable names: Food components definition and re-naming

 3. Standardising of values

 4. Standardising unit of measurement



## Step 3: Data cleaning and standardisation of FCTs  {visibility="hidden"}

<br/> 

-   Food (fish) name/ description standardisation:

    - [ASFIS* List of Species for Fishery Statistics Purposes](https://www.fao.org/fishery/en/collection/asfis/en)

    - [95 ICS SUA Fisheries codes & categories]()

::: {.fragment}
[*Aquatic Sciences and Fisheries Information System]{style="font-size: 20px; color:#696969"}
:::


## Step 3: Food name/ description standardisation {visibility="hidden"}

<br/> 

Fisheries categories matching in Norwegian FCT (2021).

-   **Scientific names** were used to allocate the 'International Standard Statistical Classification for Aquatic Animals and Plants' (ISSCAAP) codes. <br/> 

-   **ISSCAAP codes and text pattern** (food description) to allocate ICS SUA Fisheries codes.<br/> 

-   Review and final allocation of unidentified fish items were performed.

::: notes
For example, fish description mentioning "cured, smoked, salted or dried" were allocated to the fish preparation type "cured" Therefore, a fish entry that was matched to the ISSCAAP code == "39" and to the fish preparation type "cured" would be assigned to the ICS SUA category "1544", which corresponds to "Marine fish, other, cured".
:::

## Step 4a: Data harmonisation and compilation of FCTs  {visibility="hidden"}

<br/>

-   **Character values standardisation.** For example, trace ("tr") or below detection limit ("\<LOD") to zero (0) or removing special characters ("\[\]", "()", "\*").<br/> 

-   **Unit of measure standardisation.** For example from mg/100g to g/100g.[^4]<br/> 

-   **Harmonising Food Composition Tables and Databases.** From 12 individual FCTs to a compiled FCT data library.  

[^4]: FAO/INFOODS, 2012. Guidelines for Converting Units, Denominators and Expressions Version 1.0

::: notes
The data library used for the Fisheries Global NCT.
The steps outlined thus far were performed by individual script for each FCT, and were performed not only for fisheries but for the whole FCT. This is important as the burden of compilation of any other commodity from those data sources would be significantly decreased. As, we would see later in the presentation.

:::


## Step 4b: Variable recalculation and missing values {visibility="hidden"}

<br/>

Other data transformation were performed in the harmonised data library. 

- **Re-calculation of food components.** For example, Energy, Carbohydrates by difference or Vitamin A (RAE).

- **Back-calculation from other components.** For example, Niacin, preformed was back-calculated from Niacin, equivalents and Tryptophan. 

- **Combining food components.** For example, Vitamin B6 included: Vitamin B6 determined by analysis, determined by calculation and by unknown method.

- **Data imputation**: For example, if a ICS SUA fishery category did not provided data for one nutrient. 

::: notes
Food components were recalculated using functions generated based on FAO/ INFOODS equations standards. For example, Energy, Carbohydrates by difference or Vitamin A (RAE).
-Food components with different definitions were combined to increase availability of the data. For example: Total fats, dietary fibre, thiamine, and Vitamin B6.
-Food components were back-calculated using adaptation of standard equations. For example, Ash, B-Carotene eq., Retinol, or Niacin.
:::


## Functions: Re-calculation {visibility="hidden"}

<br/>
Functions were developed to re-calculate:
 <br/>
 <br/>
 
::: {.fragment .semi-fade-out}
`SOP_std_creator()` - Sum of Proximate <br/>
:::

`ENERCKcal_standardised()` - Energy (kcal)

::: {.fragment .semi-fade-out}
`CHOAVLDFg_std_creator()` - Carbohydrates by difference <br/>
`VITA_RAEmcg_std_creator()` - Vitamin A (REA)<br/>
`CARTBEQmcg_std_creator()` - Beta-Carotene Eq. <br/>
:::




## Functions: Energy {auto-animate="true"} {visibility="hidden"}

``` {.r code-line-numbers="5-6"}

ENERCKcal_standardised <- function(PROCNTg, FATg_standardised, CHOAVLDFg, 
                                   FIBGTg, ALCg){
                         
  ALCg <- ALCg %>% replace_na(0)
  FIBGTg <- FIBGTg %>% replace_na(0)
  ENERCKcal_std <- PROCNTg*4 + FATg_standardised*9 +  CHOAVLDFg*4 +
  FIBGTg*2 + ALCg*7
  
  return(ENERCKcal_std)
  
  }
```


## Functions: Re-calculation {visibility="hidden"}

<br/>
Functions were developed to re-calculate:
 <br/>
 <br/>

::: {.fragment .semi-fade-out}
`SOP_std_creator()` - Sum of Proximate <br/>
`ENERCKcal_standardised()` - Energy (kcal)<br/>
`CHOAVLDFg_std_creator()` - Carbohydrates by difference <br/>
`VITA_RAEmcg_std_creator()` - Vitamin A (REA)<br/>
:::
`CARTBEQmcg_std_creator()` - Beta-Carotene Eq. <br/>


## Functions: Beta-Carotene Equivalents {auto-animate="true"} {visibility="hidden"}

``` {.r code-line-numbers="4,24"}

CARTBEQmcg_std_creator <- function(dataset) {
    # Check presence of required columns
    columns <- c("CARTBmcg", "CARTAmcg", "CRYPXBmcg")
    check_columns(dataset = dataset, columns = columns)
    # Try the calculation
    tryCatch(
        dataset %>%
            as_tibble() %>%
            mutate_at(.vars = columns, .funs = as.numeric) %>%
            # ! Create a temp row with the count of NAs in the required columns
            mutate(temp = rowSums(is.na(
                dataset %>%
                    select(all_of(columns))
            ))) %>%
            rowwise() %>%
            # ! Replace comment NAs with blank so that we can concatenate comments well.
            mutate(comment = ifelse(is.na(comment), "", comment)) %>%
            # ! If all inputs to the CARTBEQmcg_std calculation are NA return NA
            # ! Else perform calculation ommiting NAs
            mutate(CARTBEQmcg_std = ifelse(
                temp == length(columns),
                NA,
                sum(1 * CARTBmcg, 0.5 * CARTAmcg, 0.5 * CRYPXBmcg, na.rm = TRUE)
            )) 
}
```

## Functions: Beta-Carotene Equivalents {auto-animate="true"} {visibility="hidden"}

``` {.r code-line-numbers="32,42"}

CARTBEQmcg_std_creator <- function(dataset) {
    # Check presence of required columns
    columns <- c("CARTBmcg", "CARTAmcg", "CRYPXBmcg")
    check_columns(dataset = dataset, columns = columns)
    # Try the calculation
    tryCatch(
        dataset %>%
            as_tibble() %>%
            mutate_at(.vars = columns, .funs = as.numeric) %>%
            # ! Create a temp row with the count of NAs in the required columns
            mutate(temp = rowSums(is.na(
                dataset %>%
                    select(all_of(columns))
            ))) %>%
            rowwise() %>%
            # ! Replace comment NAs with blank so that we can concatenate comments well.
            mutate(comment = ifelse(is.na(comment), "", comment)) %>%
            # ! If all inputs to the CARTBEQmcg_std calculation are NA return NA
            # ! Else perform calculation ommiting NAs
            mutate(CARTBEQmcg_std = ifelse(
                temp == length(columns),
                NA,
                sum(1 * CARTBmcg, 0.5 * CARTAmcg, 0.5 * CRYPXBmcg, na.rm = TRUE)
            )) %>%
            # ! Use the same logic as above for comment appendage.
            mutate(comment = ifelse(
                temp == length(columns),
                comment,
                paste0(
                    comment,
                    " | CARTBEQmcg_std calculated from CARTBmcg, CARTAmcg and CRYPXBmcg"
                )
            )) %>%
            # ! Check which components of the calculation were used. If only CARTB was used. Append the comment to reflect that.
            mutate(comment = ifelse(
                (
                    temp != length(columns) &
                        !is.na(CARTBmcg) &
                        is.na(CARTAmcg) & is.na(CRYPXBmcg)
                ),
                paste0(comment, " but only CARTB was used"),
                comment
            )) %>%
            # ! remove the temp column
            select(-temp) %>%
            ungroup(),
        error = function(e) {
            print("Error : Required columns not found i.e :")
            print(columns)
            print("The CARTBEQmcg_std will not be calculated")
        }
    )
}
  
```


## Functions: Back-calculation {visibility="hidden"}

<br/> 

1. Ash by difference (g/100g) - scripted

2. Beta-carotene equivalents (mcg/100g) - `CARTBEQmcg_std_back_calculator_VITA_RAEmcg()` 

3. Retinol (mcg/100g) - `RETOLmcg_Recalculator()`

4. Niacin (mcg/100g) - `nia_conversion_creator()`


## Back-calculation: Ash by difference {visibility="hidden"}
<br/> 
<br/> 

::: {.fragment}
**Carbohydrates available by difference (g/100g)** = 100 - (water + protein +
 fat + ash + alcohol + dietary fibre)
:::

<br/>

::: {.fragment}
**Ash by difference (g/100g)** = 100 - (water + protein +
fat + *available carbohydrate* + alcohol + dietary fibre)
:::

<br/> 

::: {.fragment}

```{.r code-line-numbers="3"}

NO_FCT_Data$ASHg_bydiff <-  100-(NO_FCT_Data$WATERg + NO_FCT_Data$PROCNTg + 
                          NO_FCT_Data$FAT_g + NO_FCT_Data$CHOAVLg +     
                          NO_FCT_Data$ALCg +  NO_FCT_Data$FIBTGg)
                                 

```

:::

## Back-calculation: Beta-carotene equivalents {visibility="hidden"} {visibility="hidden"}

::: {.fragment}
**Beta-Carotene eq. (mcg/100g)**  = 1\*Beta-carotene
(mcg/100g) + 0.5\* Alpha-carotene (mcg/100g) + 0.5\* Beta-cryptoxanthin
(mcg/100g)
:::

::: {.fragment}
**Beta-Carotene eq. (mcg/100g)** Beta-Carotene eq. (mcg/100g) = Beta-Carotene eq. (mcg/100g)
:::

::: {.fragment}

**Eq.6c.** Beta-Carotene eq. (mcg/100g) = 12\*(Vitamin A, retinol activity eq. (RAE) (mcg/100g EP) - Retinol (mcg/100g EP))

**Eq.8.1** Vitamin A, retinol activity eq. (RAE) (mcg/100g EP) = Retinol (mcg/100g EP) + **1/12\* Beta-Carotene eq. (mcg/100g EP)**

:::

::: {.fragment}

When implausible value (Retinol > Vitamin A) 

**Eq.6c.** Beta-Carotene eq. (mcg/100g) =  0

:::


## Back-calculation: Retinol {visibility="hidden"} {visibility="hidden"}


::: {.fragment}
**Eq.9a.** Retinol (mcg/100g EP) = Vitamin A, retinol activity eq. (RAE) (mcg/100g) - 1/12\* Beta-Carotene eq. (mcg/100g EP)

**Eq.8.1** Vitamin A, retinol activity eq. (RAE) (mcg/100g EP) = **Retinol (mcg/100g EP)** + 1/12\* Beta-Carotene eq. (mcg/100g EP)

:::

::: {.fragment}

**Eq.9b** Retinol (mcg/100g EP) = Vitamin A, retinol eq. (RE) (mcg/100g EP) + 2\*Vitamin A, retinol activity eq. (RAE) (mcg/100g EP)

**Eq.8.1** Vitamin A, retinol activity eq. (RAE) (mcg/100g EP) = **Retinol (mcg/100g EP)** + 1/12\* Beta-Carotene eq. (mcg/100g EP)

**Eq.8.2** Vitamin A, retinol eq. (RE) (mcg/100g EP) = **Retinol (mcg/100g EP)**
+ 1/6\* Beta-Carotene eq. (mcg/100g EP)

:::

## Combination of variables {visibility="hidden"}

::: {.panel-tabset}


### Combined variables {visibility="hidden"}

  - Thiamin - `THIAmg_standardised`
  - Vitamin B6 - `VITB6_mg_standardised`
  - Fat - `FAT_g_standardised`

### Code {visibility="hidden"}

```{r, echo=TRUE}

#This function combine all the Tagnames for FAT_g_standardised

for(i in 1:nrow(fao_fish_fct)){
  print(i)
  if (!is.na(fao_fish_fct$FATg[i])) {
    print(!is.na(fao_fish_fct$FATg[i]))
    fao_fish_fct$FAT_g_standardised[i] <- fao_fish_fct$FATg[i]
  }  
  if (is.na(fao_fish_fct$FATg[i])) { 
    fao_fish_fct$FAT_g_standardised[i] <- fao_fish_fct$FAT_g[i]
  } 
  if (is.na(fao_fish_fct$FATg[i]) & is.na(fao_fish_fct$FAT_g[i])) {
    fao_fish_fct$FAT_g_standardised[i] <- fao_fish_fct$FATCEg[i]
  }
  if (is.na(fao_fish_fct$FATg[i]) & is.na(fao_fish_fct$FAT_g[i]) & 
      is.na(fao_fish_fct$FATCEg[i])) {
    fao_fish_fct$FAT_g_standardised[i] <- NA
  }
  print(fao_fish_fct$FAT_g_standardised[i])
}

```

::: notes
In our FCT data library the following variables were recombined: FAT_g\_standardised, FIBTGg_standardised*, THIAmg_standardised and VITB6_mg_standardised
:::

:::

## Step 5: Visual and statistical quality checks  {visibility="hidden"}
 
 <br/> 
Visualisation was performed in the harmonised data library for nutrient evaluation and missing values identification. <br/>
<br/> 
Including:

-   **Identification of data gaps & errors.** Systematically non-reported fishery products and/or food components. <br/>
-   **Identification of missing values.** For example, fishery products and food components were reported but high number of missing values were found.<br/>
-   **Outliers.** Values were extremely low or high compared within the same ICS SUA fishery category.

::: notes
We checked the number of missing values per food component using data
visualisation packages. We used the *package naniar*(@ref-naniar) for visualising missing
values by ICS SUA fishery category and by FCT. This allowed us to
identify any typos or mistakes when renaming the food components, and
also to identify potential food components that could be excluded due to
the high number of missing values
Similarly, we used visuals to identify data gaps and completeness for final inclusion of nutrients. 
Histograms and boxplots were used to check the data variability and identify outliers. 
:::

## Step 6: Data formatting & exporting {visibility="hidden"}
<br/>

-   Food component values were calculated for each ICS SUA fishery category.

-   Mean or re-calculation of food components were computed & evaluated.

-   Fishery data library was exported to excel.

::: aside
Formatting and re-calculation were done using functions.
:::

::: notes
1)  SOP own
2)  Energy (kcal)
3)  Energy (kJ)
4)  Carbohydrates by difference (g)
5)  Vitamin A RAE (mcg) 
6)  Vitamin A RA (mcg)
:::


# The Extended Fisheries Global NCT (2022)  {visibility="hidden"}


## Fishery products per FCTs {visibility="hidden"}
 
```{r}

fao_fish_fct %>% count(source_fct) %>% 
  mutate(perc = n/sum(n)*100,
         fct_label = paste0(source_fct, " (",
                            n, ")")) %>% 
  arrange(desc(perc)) %>% 
ggplot( aes(x=fct_label, y=perc)) +
  geom_segment( aes(x=fct_label, xend=fct_label, 
                  y=0, yend=perc), 
                color="skyblue") +
  geom_point( color="blue", size=4, alpha=0.6) +
  theme_light() +
  coord_flip() +
  theme(
    panel.grid.major.y = element_blank(),
    panel.border = element_blank(),
   axis.text.y = element_text(size=14),
    axis.text.x = element_text(size=14),
    axis.ticks.y = element_blank()) +
  xlab("") +
  ylab("%")

```

::: aside
[US19: US Department of Agriculture (USDA) FCT (2019), AU19: Food Standards Australia New Zealand (FSANZ) FCT (2019), NZ18: New Zealand Food Composition FCT (2019),  UK21: McCance and Widdowson's The Composition of Foods Integrated Dataset (CoFID) (2021), DK19: Frida, DTU Foods (Denmark) FCT (2019), WA19:  FAO/INFOODS FCT for Western Africa (2019), KE18: Kenya FCT (2018), IN17: Indian FCT (2017), JA15: The Standard FCT in Japan (2015), BA13: FCT for Bangladesh, BR11: Brazilian FCT (TACO) (2011), UF16: FAO/INFOODS Global FCT for Fish and Shellfish (2016)]{style="font-size: 12px; color:#696969"}
:::

## Food composition data for fishery products: Overview (1)  {visibility="hidden"} 

<br/>

- 4824* fish and fishery products were compiled from 12 FCTs.

- 9 FCTs were open and freely accessible and cleaned for all foods.

- 30 food components were reported from more than 100 compiled variables. 

:::aside
*including duplicated items
:::

## Harmonisation of the data  {visibility="hidden"}

<br/>

- **Tagname** re-naming was needed in all FCTs,

    - 4 FCTs did not report Tagnames [(DK19, NZ18, BA13 & NO21)]{style="font-size: 20px; color:#696969"}
  
- **“Lower quality values”** were reported in 4 FCTs [(JA15, KE18, WA19 & UF16)]{style="font-size: 20px; color:#696969"}.

- **Trace and/or below limit of detection values** were transformed to zero in 6 FCTs [(IN17 ("\<LOD"), BA13, BR11, JA15 ("Tr"), KE18 & WA19 ("tr"))]{style="font-size: 20px; color:#696969"}.

- **Measurement units transformation** was needed for Tryptophan,Vitamin A, DHA and EPA in 3 FCTs [(US19, IN17 & JA15)]{style="font-size: 20px; color:#696969"}.

  
## Fisheries categories matching in Norwegian FCT (2021)  {visibility="hidden"}

- **ISSCAAP code** was allocated to 79% (183/232) of the fish items in NO21, of which

  -   89% (n=164) of the matches which were using the scientific names 
  -   10% (n=19) were done manually using scientific name/ food description. 

- **95 ICS SUA fishery categories** were matched to 234* fish and fishery products for use in the NCT.

::: aside
*183 unique fish items
:::


## Data Availability  {visibility="hidden"}

```{r}

#├ Plot (heat map): % of missing values per FCT ----

components <- c("WATERg",
        "F22D6N3g",
        "F20D5N3g",
        "VITB6Amg",
        "VITB6Cmg",
        "VITB6_mg",
        "NIAEQmg",
        "NIAmg",
        "NIATRPmg",
        "TRPmg",
        "VITB12mcg",
        "VITDEQmcg",
        "VITDmcg",
        "CHOCALmcg",
        "ERGCALmcg",
        "CHOCALOHmcg",
        "ERGCALOHmcg",
        "CUmg",
        "SEmcg",
        "IDmcg")
components_longname <- c( "Water",
                 "Docosahexaenoic acid (DHA)",
                 "Eicosapentaenoic acid (EPA)",
                 "Vitamin B6 determined by analysis",
                 "Vitamin B6 determined by calculation",
                 "Vitamin B6 by unknown method",
                # "VITB6_mg_standardised",
                # "NIAmg_std",
                 "Niacin equivalents",
                 "Niacin, prefrormed",
                 "Niacin equivalents, from tryptophan",
                 "Tryptophan",
                 "Vitamin B12",
                 "Vitamin D calculated (eq)",
                 "Vitamin D calculated",
                 "Cholecalciferol (D3)",
                 "Ergocalciferol (D2)",
                 "25-hydroxycholecalciferol",
                 "25-hydroxyergocalciferol",
                 "Copper",
                 "Selenium",
                 "Iodine" )

fao_fish_fct[, c(components ,"source_fct")] %>% 
  rename_all(., ~c(components_longname,  "source_fct")) %>%  
  naniar::gg_miss_fct(., fct = source_fct)  +
  labs( x= "", y= "") +
  theme(
     axis.text.y = element_text(size=14),
    axis.text.x = element_text(size=14)
  )
  

```

::: aside
[US19: US Department of Agriculture (USDA) FCT (2019), AU19: Food Standards Australia New Zealand (FSANZ) FCT (2019), NZ18: New Zealand Food Composition FCT (2019),  UK21: McCance and Widdowson's The Composition of Foods Integrated Dataset (CoFID) (2021), DK19: Frida, DTU Foods (Denmark) FCT (2019), WA19:  FAO/INFOODS FCT for Western Africa (2019), KE18: Kenya FCT (2018), IN17: Indian FCT (2017), JA15: The Standard FCT in Japan (2015), BA13: FCT for Bangladesh, BR11: Brazilian FCT (TACO) (2011), UF16: FAO/INFOODS Global FCT for Fish and Shellfish (2016)]{style="font-size: 12px; color:#696969"}
:::


::: notes

Scale - Bright yellow 100% missing values and dark blue - no missing data

:::

## Data Availability {visibility="hidden"}

```{r}

fao_fish_fct[, c(components ,"source_fct")] %>% 
  rename_all(., ~c(components_longname,  "source_fct")) %>%  
  naniar::gg_miss_fct(., fct = source_fct)  +
   geom_rect(aes(xmin = 0.5, ymin = -Inf, xmax = 1.5, ymax =Inf), #AU19
            linetype = "solid",alpha = 0, colour = "red", size = 1) +
  labs( x= "", y= "") +
  theme(
     axis.text.y = element_text(size=14),
    axis.text.x = element_text(size=14)
  )
```
::: aside
[US19: US Department of Agriculture (USDA) FCT (2019), AU19: Food Standards Australia New Zealand (FSANZ) FCT (2019), NZ18: New Zealand Food Composition FCT (2019),  UK21: McCance and Widdowson's The Composition of Foods Integrated Dataset (CoFID) (2021), DK19: Frida, DTU Foods (Denmark) FCT (2019), WA19:  FAO/INFOODS FCT for Western Africa (2019), KE18: Kenya FCT (2018), IN17: Indian FCT (2017), JA15: The Standard FCT in Japan (2015), BA13: FCT for Bangladesh, BR11: Brazilian FCT (TACO) (2011), UF16: FAO/INFOODS Global FCT for Fish and Shellfish (2016)]{style="font-size: 12px; color:#696969"}
:::

## Data Availability {visibility="hidden"}

```{r}

fao_fish_fct[, c(components ,"source_fct")] %>% 
  rename_all(., ~c(components_longname,  "source_fct")) %>%  
  naniar::gg_miss_fct(., fct = source_fct)  +
   geom_rect(aes(xmin = 5.5, ymin = -Inf, xmax = 6.5, ymax =Inf), #JA15
            linetype = "solid",alpha = 0, colour = "red", size = 1) +
  labs( x= "", y= "") +
  theme(
     axis.text.y = element_text(size=14),
    axis.text.x = element_text(size=14)
  )
```
::: aside
[US19: US Department of Agriculture (USDA) FCT (2019), AU19: Food Standards Australia New Zealand (FSANZ) FCT (2019), NZ18: New Zealand Food Composition FCT (2019),  UK21: McCance and Widdowson's The Composition of Foods Integrated Dataset (CoFID) (2021), DK19: Frida, DTU Foods (Denmark) FCT (2019), WA19:  FAO/INFOODS FCT for Western Africa (2019), KE18: Kenya FCT (2018), IN17: Indian FCT (2017), JA15: The Standard FCT in Japan (2015), BA13: FCT for Bangladesh, BR11: Brazilian FCT (TACO) (2011), UF16: FAO/INFOODS Global FCT for Fish and Shellfish (2016)]{style="font-size: 12px; color:#696969"}
:::
## Data Availability  {visibility="hidden"}

```{r }

#├ Plot (heat map): % of missing values per FCT ----

fao_fish_fct[, c(components ,"source_fct")] %>% 
  rename_all(., ~c(components_longname,  "source_fct")) %>%  
  naniar::gg_miss_fct(., fct = source_fct)  +
   geom_rect(aes(xmin = 0.5, ymin = 4.5, xmax = Inf, ymax =6.5), #DHA & EPA
            linetype = "solid",alpha = 0, colour = "red", size = 1) +
  labs( x= "", y= "") +
  theme(
     axis.text.y = element_text(size=14),
    axis.text.x = element_text(size=14))
  

```
::: aside
[US19: US Department of Agriculture (USDA) FCT (2019), AU19: Food Standards Australia New Zealand (FSANZ) FCT (2019), NZ18: New Zealand Food Composition FCT (2019),  UK21: McCance and Widdowson's The Composition of Foods Integrated Dataset (CoFID) (2021), DK19: Frida, DTU Foods (Denmark) FCT (2019), WA19:  FAO/INFOODS FCT for Western Africa (2019), KE18: Kenya FCT (2018), IN17: Indian FCT (2017), JA15: The Standard FCT in Japan (2015), BA13: FCT for Bangladesh, BR11: Brazilian FCT (TACO) (2011), UF16: FAO/INFOODS Global FCT for Fish and Shellfish (2016)]{style="font-size: 12px; color:#696969"}
:::

## Transformation & Harmonisation {visibility="hidden"}

- 7 food components (SOP, Energy (kcal, kJ), Carbohydrates by difference, Vitamin A (RAE, RE) and Beta-Carotene Eq.) were re-calculated.

- 4 food components (Ash, Beta-Carotene Eq., Retinol, and Niacin) were back-calculated.

- 3 nutrients each (Fat, Thiamine and Vitamin B6) had multiple variables which were integrated.


## Evaluating 10 nutrients based on data availability {visibility="hidden"}

```{r fig-2, fig.cap= "Availability of data: Percentage (%) of fish entries with values of selected components.", echo=FALSE}

components <- c("WATERg",
        "F22D6N3g",
        "F20D5N3g",
        "VITB6_mg_standardised",
        "NIAmg_std",
        "VITB12mcg",
        "VITDEQmcg",
        "VITDmcg",
        "CHOCALmcg",
        "ERGCALmcg",
        "CHOCALOHmcg",
        "ERGCALOHmcg",
        "CUmg",
        "SEmcg",
        "IDmcg")

components_longname <- c( "Water",
                 "Docosahexaenoic acid (DHA)",
                 "Eicosapentaenoic acid (EPA)",
                 "VITB6mg_standardised",
                 "NIAmg_standardised",
                 "Vitamin B12",
                 "Vitamin D calculated (eq)",
                 "Vitamin D calculated",
                 "Cholecalciferol (D3)",
                 "Ergocalciferol (D2)",
                 "25-hydroxycholecalciferol",
                 "25-hydroxyergocalciferol",
                 "Copper",
                 "Selenium",
                 "Iodine" )

fao_fish_fct %>% select(components) %>% rename_all(., ~components_longname) %>% 
  mutate_at(components_longname, as.numeric) %>% 
  pivot_longer(cols = all_of(components_longname),
               names_to = "NV", 
               values_to = "n") %>% 
  filter(!is.na(n)) %>% 
  group_by(NV) %>% 
  summarise(total = n()) %>%
  ungroup() %>% 
  mutate(perc = total/nrow(fao_fish_fct), 
         cat = ifelse(perc >.75, 
                      "high", 
                      ifelse(perc < 0.45, 
                             "poor", "medium" ))) %>% 
  ggplot(aes(x=reorder(NV, perc), y = perc*100, fill = as.factor(cat))) +
  geom_bar(stat = "identity") +
  theme_light() +
  coord_flip() +
  geom_hline(aes(yintercept = 60), linetype = "dashed") +
  annotate(geom = "text", x=0.7, y=63, label="60%") +
  scale_fill_manual("Coverage",
  values=c("darkolivegreen3","lightgoldenrod2", "red4"), 
  labels = c("High (>75%)", "Medium (75-45%)", "Poor (<45%)")) +
  theme(
    panel.grid.major.y = element_blank(),
    panel.border = element_blank(),
    axis.ticks.y = element_blank()) +
   labs( x= "", y= "") + 
  guides(x = guide_axis(n.dodge = 2)) +
  theme(
     axis.text.y = element_text(size=12),
    axis.text.x = element_text(size=12))

```

::: notes
From the 10 food components that we reviewed we decided to include 6 of them, because they had a overall coverage of more than 60%.
:::

## Selenium imputation and documentation (1) {visibility="hidden"}

<br>

-   The only missing data were selenium (Se) in four ICS SUA categories
-   Imputation was performed and documented in R(studio) (`missing.R`).
-   Documentation can be found in `comment` variable in the Fisheries Global NCT.

<br>

## Selenium imputation and documentation (2) {.smaller} {visibility="hidden"}

```{r}
  #ICS FAOSTAT description of the missing values
  
  missing <- c("Cephalopods, cured", "Aquatic animals nei, cured", 
               "Aquatic animals nei, preparations nei", "Crustaceans, cured")
  
  # Checking the items included reporting other NVs for that categories
  fao_fish_fct %>% 
    filter(ics_faostat_sua_english_description %in% missing)  %>%
    select(food_desc, SEmcg, source_fct, comment) %>% knitr::kable(digits = 2) %>%
  kable_paper() %>%
  kable_styling(font_size = 30) %>% 
  kable_paper("hover", full_width = F) 
  
```


## Missing values for Fatty Acids (DHA and EPA) by ICS SUA Fishery Category {auto-animate="true"} {visibility="hidden"}

```{r}

fao_fish_fct[,c("F22D6N3g",
                "F20D5N3g", "ICS.FAOSTAT.SUA.Current.Code")] %>% 
  rename_all(., ~c("DHA", "EPA", "ICS.FAOSTAT.SUA.Current.Code")) %>% 
  naniar::gg_miss_fct(., fct = ICS.FAOSTAT.SUA.Current.Code) +
  coord_flip() +
  scale_x_discrete(guide = guide_axis(n.dodge = 3)) +
  labs( x= "", y= "") +
  theme(
   #  axis.text.y = element_text(size=14),
    axis.text.x = element_text(size=14)
  )

```


::: notes
 clarify these are fatty acids in the title for the stats division who don't know - make the point that this gap is why NO16 was added. 
DHA & EPA were reported to a lesser extent than fat.
This may lead to inconsistencies/ inaccuracies in the final data.
Imputation was discouraged due to lack of accurate data for the missing values and variability of this nutrients in fish.
:::

## Missing values for Fatty Acids (DHA and EPA) by ICS SUA Fishery Category {auto-animate="true"} {visibility="hidden"}

```{r}

fao_fish_fct %>% filter(source_fct != "NO21") %>% 
  select( F22D6N3g,
                F20D5N3g, ICS.FAOSTAT.SUA.Current.Code) %>% 
  rename_all(., ~c( "DHA", "EPA", "ICS.FAOSTAT.SUA.Current.Code")) %>% 
  naniar::gg_miss_fct(., fct = ICS.FAOSTAT.SUA.Current.Code) +
  coord_flip() +
  scale_x_discrete(guide = guide_axis(n.dodge = 3)) +
  labs( x= "", y= "") +
  theme(
   #  axis.text.y = element_text(size=14),
    axis.text.x = element_text(size=14)
  )

```


::: notes
DHA & EPA were reported to a lesser extent than fat, contribution from NO21. 
This may lead to inconsistencies/ inaccuracies in the final data.
Imputation was discouraged due to lack of accurate data for the missing values and variability of this nutrients in fish.
:::


## Visualisation for decision making: outliers {auto-animate="true"} {visibility="hidden"}

```{r}
test <- "Aquatic mammals, meat"

hist(as.numeric(fao_fish_fct$FAT_g_standardised[fao_fish_fct$ics_faostat_sua_english_description %in% test]), main = paste0("Total fat (g/100g) in ", tolower(test)),  xlab = "Total fat (g/100g)")


```


## Checking outliers: Copper  {visibility="hidden"}

:::{.panel-tabset}

### Visualising Cu (mg/100g) per FCT  {visibility="hidden"}

```{r}

fao_fish_fct %>% ggplot(aes(as.numeric(CUmg), source_fct)) +
  geom_boxplot() + theme_classic() +labs( x= "", y= "")

```

### High Cu values  {visibility="hidden"}

```{r}

fao_fish_fct %>% filter(as.numeric(CUmg)>2.5) %>% 
  select(source_fct, fdc_id, food_desc, WATERg, CUmg ) %>% 
  distinct() %>% arrange(desc(as.numeric(CUmg))) %>% knitr::kable() %>%
  kable_paper() %>%
  kable_styling( font_size = 30) %>% 
  kable_paper("hover", full_width = F)

```

:::

## Other visual & quality checks: Water {visibility="hidden"}

``` {.r code-line-numbers="3,4,5"}

subset(fao_fish_fct, 
       str_detect(food_desc, " dry| dried")&
       !str_detect(food_desc, "stewed|cooked")&
         WATERg>30, 
       select = c(source_fct, food_desc,  WATERg)) %>% 
  distinct()
```

```{r, results='asis'}

subset(fao_fish_fct, 
       str_detect(food_desc, " dry| dried")&
       !str_detect(food_desc, "stewed|cooked")&
         WATERg>30, 
       select = c(source_fct, food_desc,  WATERg)) %>% 
  distinct() %>% knitr::kable() %>%
  kable_paper() %>%
  kable_styling( font_size = 30) %>% 
  kable_paper("hover", full_width = F) # %>%
  #scroll_box(width = "500px", height = "2000px")

```

## Other visual & quality checks: Sum of Proximate {visibility="hidden"}

```{r}

n <- length(fao_fish_fct$food_desc[as.numeric(fao_fish_fct$SOP_std) <95|as.numeric(fao_fish_fct$SOP_std) >105])

hist(as.numeric(fao_fish_fct$SOP_std), main = "",  xlab = "")
abline(v = 95, col = 2, lwd=3, lty =2)
abline(v = 105, col = 2, lwd=3, lty =2)

```

::: aside

`r  paste0("There are ", n, " fish items outside of acceptable range (95-105g)")`

:::


## Other visual & quality checks: Carbohydrates by difference {visibility="hidden"}


```{r}

label <- paste0(round(sum(str_detect(fao_fish_fct$comment, "CHOAVLDFg_std assumed zero"), na.rm = T)/length(fao_fish_fct$CHOAVLDFg_std)*100), "% of the carbohydrates by difference values were negative values and replaced with zero (\"assumed zero\")")

hist(as.numeric(fao_fish_fct$CHOAVLDFg_std), main = "" ,
     xlab = "")


```

::: aside

`r  paste0(round(sum(str_detect(fao_fish_fct$comment, "CHOAVLDFg_std assumed zero"), na.rm = T)/length(fao_fish_fct$CHOAVLDFg_std)*100), "% of the carbohydrates by difference values were negative values and replaced with zero (\"assumed zero\")")`

:::

::: notes
The documentation of these changes are important as they would have an impact of the final estimates, particularly as this variable is used to calculate SOP, and more importantly the total energy. If total energy is calculated using negative values it would lead to a underestimation of the total energy supplied by the foods
:::
 
## Documentation  {visibility="hidden"}

- A document with all the decisions and assumptions was generated.

- In the NCT, `comments` were added as a separated column with all the data transformations: imputation, assumed zero, calculated, etc. 

- Scripts are provided to fully reproduce the approach and/or to update if needed.

::: notes
this is important to 1) identify data gaps, and 2) flagging potential issues with the data. 
:::

# The advantages of a scripted approach {visibility="hidden"}

Thomas Codd


# Conclusion & Recommendations for the future  {visibility="hidden"}

## What has been completed?  {visibility="hidden"}

<br>

- Expanded & updated the Fisheries Global NCT:
 
  -  21 + 6 additional food components for 95 ICS SUA Fisheries Categories.
  -  Additional components were compiled but not reported.
  -  12 FCTs harmonised into a FCT data library.
 <br>

- A framework to reproduce and update FCTs and NCTs:

  -  Re-usable scripts and functions.
  -  Reproducible workflow & report.


## An opportunity {visibility="hidden"}
 
 <br>
 
- For 12 FCTs all data was imported & harmonised in R(Studio).
- The scripts from this project could be re-used to create NCTs for other foods.

 <br>

::: {.fragment}

- "Easily" expanding with new FCTs into the NCT.

:::

## What needs to be further advanced? {visibility="hidden"}

 <br>

- Assessment of the impact of the assumptions on the final results (including imputation, calculation, assumed zero, and edible portion).

- Improving the metadata of the FCTs and NCTs. 

- Better reporting of the food composition data.

   - Including methods of analysis, sampling and locations.
   - Avoiding ambiguous and non-standard reporting.
   - Transparent provenance of re-used data.
 
 <br>

- More analytical data prioritised for key foods and nutrients.


::: notes
We checked imputing vs no imputing for this dataset for Retinol & Beta-Carotene Eq., and after consideration we believe that there was no added value. But the report would be available and it would be great to discuss the results.
- Trace/<LOD values into zero
- "Assumed zero" values
- Using back-calculation techniques
- Imputation of values 
:::


## Better data for Nutrition {visibility="hidden"}

 <br/>
 
- More **food composition analysis** are required, particularly for some fishery categories & nutrients.
    -  "Aquatic Animals nei", and fish oils in general.
    -  DHA, EPA & Selenium.
     
- High variability in certain nutrient concentration paired with high uncertainty.

  - Low number of values and highly variable.
  - Low or uncertain data quality.
  - Broad spectrum of fish and fishery products within one ICS SUA Fishery Category.

 

::: notes 

For some fishery categories and food components, the number of data were far fewer than for other.

Some of those fishery category with low number of values were very variable, and hard to know if this is the true range of chemical variability or analytical differences.

For example, rethinking some groups. For example, "Aquatic animals, nei".
:::

## Improving data quality & reporting {visibility="hidden"}

<br>

1.  Imputation techniques and their overall impact on mean values should be evaluated.

2. Food component description and combination of different methods of analysis (i.e., used for Vitamin B6).

2.  Other data management practices and their impact on final results (i.e., using "low quality values", assuming zero for trace values, data recycling, etc.).  

3.  FCT documentation for reproducibility, transparency and efficiency (i.e., minimum information standards, metadata, ontologies).

::: notes

2. Eg., Is it still relevant the use of three Tagnames if we are combining the results? What does it happen when there is an average of multiple values from different methods of analysis? Wouldn't it be better other reporting system. Eg., providing adequate metadata (both in content and in format) that allow users and machines to identify the method used for each value.

2.e.g, how can we record and account for those low quality values within the
datasets/ FCTs? can we generate a score with the number of "low quality"
values per food item?

3. Open & public dataset, even if the published FCTs doesn't provide full data, but it should be a requirement to make the background data available. Also, improving ontologies and standard vocabulary, and encouraging people to follow them Providing human and machine-readable metadata

:::


# THANK YOU!

# Q&A


